{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Creates a VPC with public and private subnets for the Synapse stacks.",
	"Parameters": {
		"VpcSubnetPrefix": {
			"Description": "The VPC subnet prefix (i.e. 10.40)",
			"Type": "String"
		},
		"VpnCidr": {
			"Description": "CIDR of the (sophos-utm) VPN",
			"Type": "String",
			"Default": "10.1.0.0/16"
		}
	},
	"Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"EnableDnsSupport": "true",
				"EnableDnsHostnames": "true",
				"CidrBlock": "10.21.0.0/16",
				"Tags": [
					{
						"Key": "Name",
						"Value": "synapse-dev-vpc"
					}
				]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "synapse-dev-internet-gateway"
					}
				]
			}
		},
		"InternetGatewayAttachment": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"ElasticIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"VpnSecurityGroup": {
			"DependsOn": "VPC",
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Security Group for VPN",
				"VpcId": {
					"Ref": "VPC"
				},
				"SecurityGroupIngress": [
					{
						"CidrIp": {
							"Ref": "VpnCidr"
						},
						"FromPort": "-1",
						"ToPort": "-1",
						"IpProtocol": "-1",
						"Description": "Allow all VPN traffic"
					}
				],
				"SecurityGroupEgress": [
					{
						"CidrIp": "0.0.0.0/0",
						"FromPort": "-1",
						"ToPort": "-1",
						"IpProtocol": "-1"
					}
				]
			}
		},
		"RedPublicNetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPublic"
					}
				]
			}
		},
		"RedInboundPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "RedPublicNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"RedOutboundPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "RedPublicNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"RedPrivateNetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPrivate"
					}
				]
			}
		},
		"RedInboundPrivateSameGroupNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "RedPrivateNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "10.21.0.0/20",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"RedInboundPrivateVpnNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "RedPrivateNetworkAcl"
				},
				"RuleNumber": "99",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": {
					"Ref": "VpnCidr"
				},
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"RedOutboundPrivateNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "RedPrivateNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"RedPublicUsEast1aSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": true,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.0.0/22",
				"AvailabilityZone": "us-east-1a",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPublicUsEast1aSubnet"
					}
				]
			}
		},
		"RedPublicUsEast1aSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPublicUsEast1aSubnet"
					}
				]
			}
		},
		"RedPublicUsEast1aSubnetNATGatwayEIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"RedPublicUsEast1aSubnetNATGatway": {
			"DependsOn": "InternetGatewayAttachment",
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": [
						"RedPublicUsEast1aSubnetNATGatwayEIP",
						"AllocationId"
					]
				},
				"SubnetId": {
					"Ref": "RedPublicUsEast1aSubnet"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPublicUsEast1aSubnet"
					}
				]
			}
		},
		"RedPublicUsEast1aSubnetPublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "InternetGatewayAttachment",
			"Properties": {
				"RouteTableId": {
					"Ref": "RedPublicUsEast1aSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"RedPublicUsEast1aSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "RedPublicUsEast1aSubnet"
				},
				"RouteTableId": {
					"Ref": "RedPublicUsEast1aSubnetRouteTable"
				}
			}
		},
		"RedPublicUsEast1aSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "RedPublicUsEast1aSubnet"
				},
				"NetworkAclId": {
					"Ref": "RedPublicNetworkAcl"
				}
			}
		},
		"RedPublicUsEast1bSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": true,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.4.0/22",
				"AvailabilityZone": "us-east-1b",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPublicUsEast1bSubnet"
					}
				]
			}
		},
		"RedPublicUsEast1bSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPublicUsEast1bSubnet"
					}
				]
			}
		},
		"RedPublicUsEast1bSubnetNATGatwayEIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"RedPublicUsEast1bSubnetNATGatway": {
			"DependsOn": "InternetGatewayAttachment",
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": [
						"RedPublicUsEast1bSubnetNATGatwayEIP",
						"AllocationId"
					]
				},
				"SubnetId": {
					"Ref": "RedPublicUsEast1bSubnet"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPublicUsEast1bSubnet"
					}
				]
			}
		},
		"RedPublicUsEast1bSubnetPublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "InternetGatewayAttachment",
			"Properties": {
				"RouteTableId": {
					"Ref": "RedPublicUsEast1bSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"RedPublicUsEast1bSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "RedPublicUsEast1bSubnet"
				},
				"RouteTableId": {
					"Ref": "RedPublicUsEast1bSubnetRouteTable"
				}
			}
		},
		"RedPublicUsEast1bSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "RedPublicUsEast1bSubnet"
				},
				"NetworkAclId": {
					"Ref": "RedPublicNetworkAcl"
				}
			}
		},
		"RedPrivateUsEast1aSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": false,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.8.0/22",
				"AvailabilityZone": "us-east-1a",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPrivateUsEast1aSubnet"
					}
				]
			}
		},
		"RedPrivateUsEast1aSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPrivateUsEast1aSubnet"
					}
				]
			}
		},
		"RedPrivateUsEast1aSubnetPrivateRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "RedPrivateUsEast1aSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "RedPublicUsEast1aSubnetNATGatway"
				}
			}
		},
		"RedPrivateUsEast1aSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "RedPrivateUsEast1aSubnet"
				},
				"RouteTableId": {
					"Ref": "RedPrivateUsEast1aSubnetRouteTable"
				}
			}
		},
		"RedPrivateUsEast1aSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "RedPrivateUsEast1aSubnet"
				},
				"NetworkAclId": {
					"Ref": "RedPrivateNetworkAcl"
				}
			}
		},
		"RedPrivateUsEast1bSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": false,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.12.0/22",
				"AvailabilityZone": "us-east-1b",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPrivateUsEast1bSubnet"
					}
				]
			}
		},
		"RedPrivateUsEast1bSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "RedPrivateUsEast1bSubnet"
					}
				]
			}
		},
		"RedPrivateUsEast1bSubnetPrivateRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "RedPrivateUsEast1bSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "RedPublicUsEast1bSubnetNATGatway"
				}
			}
		},
		"RedPrivateUsEast1bSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "RedPrivateUsEast1bSubnet"
				},
				"RouteTableId": {
					"Ref": "RedPrivateUsEast1bSubnetRouteTable"
				}
			}
		},
		"RedPrivateUsEast1bSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "RedPrivateUsEast1bSubnet"
				},
				"NetworkAclId": {
					"Ref": "RedPrivateNetworkAcl"
				}
			}
		},
		"BluePublicNetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePublic"
					}
				]
			}
		},
		"BlueInboundPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "BluePublicNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"BlueOutboundPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "BluePublicNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"BluePrivateNetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePrivate"
					}
				]
			}
		},
		"BlueInboundPrivateSameGroupNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "BluePrivateNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "10.21.16.0/20",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"BlueInboundPrivateVpnNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "BluePrivateNetworkAcl"
				},
				"RuleNumber": "99",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": {
					"Ref": "VpnCidr"
				},
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"BlueOutboundPrivateNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "BluePrivateNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"BluePublicUsEast1aSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": true,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.16.0/22",
				"AvailabilityZone": "us-east-1a",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePublicUsEast1aSubnet"
					}
				]
			}
		},
		"BluePublicUsEast1aSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePublicUsEast1aSubnet"
					}
				]
			}
		},
		"BluePublicUsEast1aSubnetNATGatwayEIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"BluePublicUsEast1aSubnetNATGatway": {
			"DependsOn": "InternetGatewayAttachment",
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": [
						"BluePublicUsEast1aSubnetNATGatwayEIP",
						"AllocationId"
					]
				},
				"SubnetId": {
					"Ref": "BluePublicUsEast1aSubnet"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePublicUsEast1aSubnet"
					}
				]
			}
		},
		"BluePublicUsEast1aSubnetPublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "InternetGatewayAttachment",
			"Properties": {
				"RouteTableId": {
					"Ref": "BluePublicUsEast1aSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"BluePublicUsEast1aSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "BluePublicUsEast1aSubnet"
				},
				"RouteTableId": {
					"Ref": "BluePublicUsEast1aSubnetRouteTable"
				}
			}
		},
		"BluePublicUsEast1aSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "BluePublicUsEast1aSubnet"
				},
				"NetworkAclId": {
					"Ref": "BluePublicNetworkAcl"
				}
			}
		},
		"BluePublicUsEast1bSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": true,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.20.0/22",
				"AvailabilityZone": "us-east-1b",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePublicUsEast1bSubnet"
					}
				]
			}
		},
		"BluePublicUsEast1bSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePublicUsEast1bSubnet"
					}
				]
			}
		},
		"BluePublicUsEast1bSubnetNATGatwayEIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"BluePublicUsEast1bSubnetNATGatway": {
			"DependsOn": "InternetGatewayAttachment",
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": [
						"BluePublicUsEast1bSubnetNATGatwayEIP",
						"AllocationId"
					]
				},
				"SubnetId": {
					"Ref": "BluePublicUsEast1bSubnet"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePublicUsEast1bSubnet"
					}
				]
			}
		},
		"BluePublicUsEast1bSubnetPublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "InternetGatewayAttachment",
			"Properties": {
				"RouteTableId": {
					"Ref": "BluePublicUsEast1bSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"BluePublicUsEast1bSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "BluePublicUsEast1bSubnet"
				},
				"RouteTableId": {
					"Ref": "BluePublicUsEast1bSubnetRouteTable"
				}
			}
		},
		"BluePublicUsEast1bSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "BluePublicUsEast1bSubnet"
				},
				"NetworkAclId": {
					"Ref": "BluePublicNetworkAcl"
				}
			}
		},
		"BluePrivateUsEast1aSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": false,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.24.0/22",
				"AvailabilityZone": "us-east-1a",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePrivateUsEast1aSubnet"
					}
				]
			}
		},
		"BluePrivateUsEast1aSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePrivateUsEast1aSubnet"
					}
				]
			}
		},
		"BluePrivateUsEast1aSubnetPrivateRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "BluePrivateUsEast1aSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "BluePublicUsEast1aSubnetNATGatway"
				}
			}
		},
		"BluePrivateUsEast1aSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "BluePrivateUsEast1aSubnet"
				},
				"RouteTableId": {
					"Ref": "BluePrivateUsEast1aSubnetRouteTable"
				}
			}
		},
		"BluePrivateUsEast1aSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "BluePrivateUsEast1aSubnet"
				},
				"NetworkAclId": {
					"Ref": "BluePrivateNetworkAcl"
				}
			}
		},
		"BluePrivateUsEast1bSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": false,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.28.0/22",
				"AvailabilityZone": "us-east-1b",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePrivateUsEast1bSubnet"
					}
				]
			}
		},
		"BluePrivateUsEast1bSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "BluePrivateUsEast1bSubnet"
					}
				]
			}
		},
		"BluePrivateUsEast1bSubnetPrivateRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "BluePrivateUsEast1bSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "BluePublicUsEast1bSubnetNATGatway"
				}
			}
		},
		"BluePrivateUsEast1bSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "BluePrivateUsEast1bSubnet"
				},
				"RouteTableId": {
					"Ref": "BluePrivateUsEast1bSubnetRouteTable"
				}
			}
		},
		"BluePrivateUsEast1bSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "BluePrivateUsEast1bSubnet"
				},
				"NetworkAclId": {
					"Ref": "BluePrivateNetworkAcl"
				}
			}
		},
		"GreenPublicNetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPublic"
					}
				]
			}
		},
		"GreenInboundPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "GreenPublicNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"GreenOutboundPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "GreenPublicNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"GreenPrivateNetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPrivate"
					}
				]
			}
		},
		"GreenInboundPrivateSameGroupNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "GreenPrivateNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "10.21.32.0/20",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"GreenInboundPrivateVpnNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "GreenPrivateNetworkAcl"
				},
				"RuleNumber": "99",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": {
					"Ref": "VpnCidr"
				},
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"GreenOutboundPrivateNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "GreenPrivateNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"GreenPublicUsEast1aSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": true,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.32.0/22",
				"AvailabilityZone": "us-east-1a",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPublicUsEast1aSubnet"
					}
				]
			}
		},
		"GreenPublicUsEast1aSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPublicUsEast1aSubnet"
					}
				]
			}
		},
		"GreenPublicUsEast1aSubnetNATGatwayEIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"GreenPublicUsEast1aSubnetNATGatway": {
			"DependsOn": "InternetGatewayAttachment",
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": [
						"GreenPublicUsEast1aSubnetNATGatwayEIP",
						"AllocationId"
					]
				},
				"SubnetId": {
					"Ref": "GreenPublicUsEast1aSubnet"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPublicUsEast1aSubnet"
					}
				]
			}
		},
		"GreenPublicUsEast1aSubnetPublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "InternetGatewayAttachment",
			"Properties": {
				"RouteTableId": {
					"Ref": "GreenPublicUsEast1aSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"GreenPublicUsEast1aSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "GreenPublicUsEast1aSubnet"
				},
				"RouteTableId": {
					"Ref": "GreenPublicUsEast1aSubnetRouteTable"
				}
			}
		},
		"GreenPublicUsEast1aSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "GreenPublicUsEast1aSubnet"
				},
				"NetworkAclId": {
					"Ref": "GreenPublicNetworkAcl"
				}
			}
		},
		"GreenPublicUsEast1bSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": true,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.36.0/22",
				"AvailabilityZone": "us-east-1b",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPublicUsEast1bSubnet"
					}
				]
			}
		},
		"GreenPublicUsEast1bSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPublicUsEast1bSubnet"
					}
				]
			}
		},
		"GreenPublicUsEast1bSubnetNATGatwayEIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"GreenPublicUsEast1bSubnetNATGatway": {
			"DependsOn": "InternetGatewayAttachment",
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": [
						"GreenPublicUsEast1bSubnetNATGatwayEIP",
						"AllocationId"
					]
				},
				"SubnetId": {
					"Ref": "GreenPublicUsEast1bSubnet"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPublicUsEast1bSubnet"
					}
				]
			}
		},
		"GreenPublicUsEast1bSubnetPublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "InternetGatewayAttachment",
			"Properties": {
				"RouteTableId": {
					"Ref": "GreenPublicUsEast1bSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"GreenPublicUsEast1bSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "GreenPublicUsEast1bSubnet"
				},
				"RouteTableId": {
					"Ref": "GreenPublicUsEast1bSubnetRouteTable"
				}
			}
		},
		"GreenPublicUsEast1bSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "GreenPublicUsEast1bSubnet"
				},
				"NetworkAclId": {
					"Ref": "GreenPublicNetworkAcl"
				}
			}
		},
		"GreenPrivateUsEast1aSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": false,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.40.0/22",
				"AvailabilityZone": "us-east-1a",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPrivateUsEast1aSubnet"
					}
				]
			}
		},
		"GreenPrivateUsEast1aSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPrivateUsEast1aSubnet"
					}
				]
			}
		},
		"GreenPrivateUsEast1aSubnetPrivateRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "GreenPrivateUsEast1aSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "GreenPublicUsEast1aSubnetNATGatway"
				}
			}
		},
		"GreenPrivateUsEast1aSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "GreenPrivateUsEast1aSubnet"
				},
				"RouteTableId": {
					"Ref": "GreenPrivateUsEast1aSubnetRouteTable"
				}
			}
		},
		"GreenPrivateUsEast1aSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "GreenPrivateUsEast1aSubnet"
				},
				"NetworkAclId": {
					"Ref": "GreenPrivateNetworkAcl"
				}
			}
		},
		"GreenPrivateUsEast1bSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"MapPublicIpOnLaunch": false,
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.21.44.0/22",
				"AvailabilityZone": "us-east-1b",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPrivateUsEast1bSubnet"
					}
				]
			}
		},
		"GreenPrivateUsEast1bSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackName"
						}
					},
					{
						"Key": "Name",
						"Value": "GreenPrivateUsEast1bSubnet"
					}
				]
			}
		},
		"GreenPrivateUsEast1bSubnetPrivateRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "GreenPrivateUsEast1bSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "GreenPublicUsEast1bSubnetNATGatway"
				}
			}
		},
		"GreenPrivateUsEast1bSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "GreenPrivateUsEast1bSubnet"
				},
				"RouteTableId": {
					"Ref": "GreenPrivateUsEast1bSubnetRouteTable"
				}
			}
		},
		"GreenPrivateUsEast1bSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "GreenPrivateUsEast1bSubnet"
				},
				"NetworkAclId": {
					"Ref": "GreenPrivateNetworkAcl"
				}
			}
		}
	},
	"Outputs": {
		"VPCId": {
			"Description": "VPCId of the newly created VPC",
			"Value": {
				"Ref": "VPC"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"VPCId"
						]
					]
				}
			}
		},
		"VpcCidr": {
			"Description": "VPC CIDR of the newly created VPC",
			"Value": {
				"Fn::GetAtt": [
					"VPC",
					"CidrBlock"
				]
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"VpcCidr"
						]
					]
				}
			}
		},
		"VpnCidr": {
			"Description": "VPN CIDR used to create this VPC",
			"Value": {
				"Ref": "VpnCidr"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"VpnCidr"
						]
					]
				}
			}
		},
		"VpcDefaultSecurityGroup": {
			"Description": "VPC DefaultSecurityGroup Id ",
			"Value": {
				"Fn::GetAtt": [
					"VPC",
					"DefaultSecurityGroup"
				]
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"VpcDefaultSecurityGroup"
						]
					]
				}
			}
		},
		"VpnSecurityGroup": {
			"Description": "VPN Security Group Id ",
			"Value": {
				"Ref": "VpnSecurityGroup"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"VpnSecurityGroup"
						]
					]
				}
			}
		},
		"RedSubnetGroupCIDR": {
			"Description": "Red subnet group CIDR",
			"Value": "10.21.0.0/20",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"Red-CIDR"
						]
					]
				}
			}
		},
		"RedPublicUsEast1aSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "RedPublicUsEast1aSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"RedPublicUsEast1aSubnet-ID"
						]
					]
				}
			}
		},
		"RedPublicUsEast1aSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.0.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"RedPublicUsEast1aSubnet-CIDR"
						]
					]
				}
			}
		},
		"RedPublicUsEast1bSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "RedPublicUsEast1bSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"RedPublicUsEast1bSubnet-ID"
						]
					]
				}
			}
		},
		"RedPublicUsEast1bSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.4.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"RedPublicUsEast1bSubnet-CIDR"
						]
					]
				}
			}
		},
		"RedPrivateUsEast1aSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "RedPrivateUsEast1aSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"RedPrivateUsEast1aSubnet-ID"
						]
					]
				}
			}
		},
		"RedPrivateUsEast1aSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.8.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"RedPrivateUsEast1aSubnet-CIDR"
						]
					]
				}
			}
		},
		"RedPrivateUsEast1bSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "RedPrivateUsEast1bSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"RedPrivateUsEast1bSubnet-ID"
						]
					]
				}
			}
		},
		"RedPrivateUsEast1bSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.12.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"RedPrivateUsEast1bSubnet-CIDR"
						]
					]
				}
			}
		},
		"BlueSubnetGroupCIDR": {
			"Description": "Blue subnet group CIDR",
			"Value": "10.21.16.0/20",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"Blue-CIDR"
						]
					]
				}
			}
		},
		"BluePublicUsEast1aSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "BluePublicUsEast1aSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"BluePublicUsEast1aSubnet-ID"
						]
					]
				}
			}
		},
		"BluePublicUsEast1aSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.16.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"BluePublicUsEast1aSubnet-CIDR"
						]
					]
				}
			}
		},
		"BluePublicUsEast1bSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "BluePublicUsEast1bSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"BluePublicUsEast1bSubnet-ID"
						]
					]
				}
			}
		},
		"BluePublicUsEast1bSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.20.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"BluePublicUsEast1bSubnet-CIDR"
						]
					]
				}
			}
		},
		"BluePrivateUsEast1aSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "BluePrivateUsEast1aSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"BluePrivateUsEast1aSubnet-ID"
						]
					]
				}
			}
		},
		"BluePrivateUsEast1aSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.24.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"BluePrivateUsEast1aSubnet-CIDR"
						]
					]
				}
			}
		},
		"BluePrivateUsEast1bSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "BluePrivateUsEast1bSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"BluePrivateUsEast1bSubnet-ID"
						]
					]
				}
			}
		},
		"BluePrivateUsEast1bSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.28.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"BluePrivateUsEast1bSubnet-CIDR"
						]
					]
				}
			}
		},
		"GreenSubnetGroupCIDR": {
			"Description": "Green subnet group CIDR",
			"Value": "10.21.32.0/20",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"Green-CIDR"
						]
					]
				}
			}
		},
		"GreenPublicUsEast1aSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "GreenPublicUsEast1aSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"GreenPublicUsEast1aSubnet-ID"
						]
					]
				}
			}
		},
		"GreenPublicUsEast1aSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.32.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"GreenPublicUsEast1aSubnet-CIDR"
						]
					]
				}
			}
		},
		"GreenPublicUsEast1bSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "GreenPublicUsEast1bSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"GreenPublicUsEast1bSubnet-ID"
						]
					]
				}
			}
		},
		"GreenPublicUsEast1bSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.36.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"GreenPublicUsEast1bSubnet-CIDR"
						]
					]
				}
			}
		},
		"GreenPrivateUsEast1aSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "GreenPrivateUsEast1aSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"GreenPrivateUsEast1aSubnet-ID"
						]
					]
				}
			}
		},
		"GreenPrivateUsEast1aSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.40.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"GreenPrivateUsEast1aSubnet-CIDR"
						]
					]
				}
			}
		},
		"GreenPrivateUsEast1bSubnetId": {
			"Description": "Export subnet's ID",
			"Value": {
				"Ref": "GreenPrivateUsEast1bSubnet"
			},
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"GreenPrivateUsEast1bSubnet-ID"
						]
					]
				}
			}
		},
		"GreenPrivateUsEast1bSubnetCidr": {
			"Description": "Export subnet's CIDR",
			"Value": "10.21.44.0/22",
			"Export": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							{
								"Ref": "AWS::Region"
							},
							{
								"Ref": "AWS::StackName"
							},
							"GreenPrivateUsEast1bSubnet-CIDR"
						]
					]
				}
			}
		}
	}
}
